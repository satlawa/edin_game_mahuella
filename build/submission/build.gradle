/*
 * Build ippo assignment2
 *
 * common tasks are:
 * 'gradle run'        - build and run the code
 * 'gradle submission' - create a zip file for assignment submission
 *
 */

apply plugin: 'java'

/*********************************************************************************************
 * dependencies
 ********************************************************************************************/

// this specifies the libraries that the application requires, and the online
// repositories where they are found. gradle will automatically download these
// as required, so you do not need to manually download any library code.

repositories {
    mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

dependencies {
    compile "org.openjfx:javafx-base:11:${platform}"
    compile "org.openjfx:javafx-graphics:11:${platform}"
    compile "org.openjfx:javafx-controls:11:${platform}"
    compile "org.openjfx:javafx-fxml:11:${platform}"
}

/*********************************************************************************************
 * execution
 ********************************************************************************************/

// if you change the name of the main class, you need to change this
// otherwise, you probably don't want to change anything here

def mainClassName='ippo.assignment2.Main'

task run(type: JavaExec) {
  group = "ippo"
  description = "run application"
  classpath sourceSets.main.runtimeClasspath
  main = "${mainClassName}"
}

/*********************************************************************************************
 * create submission zip file
 ********************************************************************************************/

def zipFile = 'ippo-submission2.zip'
def zipDir = projectDir.getPath()+'/submission'

task prep(type: Copy) {
  group = "other"
  description = "prepare files for submission"
  outputs.upToDateWhen { false }
  from '.'
  include 'doc/worksheet.pdf'
  include 'src/'
  include 'build.gradle'
  include 'settings.gradle'
  into "${project.buildDir}/submission"
}

task submission(type: Zip, dependsOn: prep) {
  group = "ippo"
  description = "create zip file for submission"
  from "${project.buildDir}/submission"
  archiveFileName = zipFile
  destinationDirectory = new File(zipDir)
  outputs.upToDateWhen { false }
  doLast {
    println "*************************************************************"
    println "your submission is in the file: ${zipFile}"
    println "in the directory: ${zipDir}"
    println "Make sure that this is what you expect before submitting it."
    println "*************************************************************"
  }
}
